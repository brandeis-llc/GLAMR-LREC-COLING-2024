# :: r-1172::step01::sent01
# :: snt1	Bring a medium pot of water to a boil .
(s1b2 / bring-ON-02~0
      :ARG1 (s1w / water~5
                 :quant (s1p / pot~3
                             :mod (s1m / medium~2)))
      :destination (s1b / boil~8)
      :mode imperative)


# :: r-1172::step02::sent01
# :: snt2	Drop in corn , beans , and carrots ; cook for 3 minutes .
(s2a2 / and
      :op1 (s2d / drop-01~0
                :ARG1 (s2a / and~6
                           :op1 (s2c2 / corn~2)
                           :op2 (s2b / bean~4)
                           :op3 (s2c3 / carrot~7))
                :ARG0 (s2y / you)
                :event-structure (s2se / subevents
                                       :E1 (s2h / has_location
                                                :THEME s2c3)
                                       :E2 (s2e / exert_force
                                                :THEME s2c3)
                                       :E3 (s2a1 / and
                                                 :op1 (s2m1 / motion
                                                            :THEME s2c3
                                                            :V_TRAJECTORY (s2d1 / dropped))
                                                 :op2 (s2h1 / has_location
                                                            :polarity -
                                                            :THEME s2c3))
                                       :E4 (s2h2 / has_location
                                                 :THEME s2c3
                                                 :DESTINATION (s2i / in~1))
                                       :E0 (s2d2 / do
                                                 :ACTION s2d))
                :imp_output (s2d3 / drop.RES))
      :op2 (s2c / cook-01~9
                :duration (s2t / temporal-quantity
                               :quant 3
                               :unit (s2m / minute~12))
                :ARG0 s2y
                :event-structure (s2se1 / subevents
                                        :E1 (s2c1 / cooked
                                                  :polarity -
                                                  :IMP_PATIENT s2d3
                                                  :V_FINAL_STATE (s2c4 / cooked))
                                        :E3 (s2a3 / apply_heat
                                                  :IMP_PATIENT s2d3)
                                        :E4 (s2c5 / cooked
                                                  :IMP_PATIENT s2d3
                                                  :V_FINAL_STATE s2c4)
                                        :E0 (s2d4 / do
                                                  :ACTION s2c))
                :imp_output (s2c6 / cook.RES))
      :mode imperative)


# :: r-1172::step03::sent01
# :: snt3	Drain vegetables and plunge into cold water .
(s3a / and~2
     :op1 (s3d / drain-01~0
               :ARG1 (s3v / vegetable~1)
               :ARG0 (s3y / you)
               :event-structure (s3se / subevents
                                      :E1 (s3a1 / and
                                                :op1 (s3h / has_location
                                                          :IMP_THEME (s3c1 / cook.RES)
                                                          :SOURCE s3v)
                                                :op2 (s3h1 / has_state
                                                           :polarity -
                                                           :SOURCE s3v
                                                           :V_FINAL_STATE (s3d1 / drained)))
                                      :E3 (s3a2 / and
                                                :op1 (s3m / motion
                                                          :IMP_THEME s3c1)
                                                :op2 (s3h2 / has_location
                                                           :polarity -
                                                           :IMP_THEME s3c1
                                                           :SOURCE s3v))
                                      :E4 (s3a3 / and
                                                :op1 (s3h3 / has_location
                                                           :IMP_THEME s3c1)
                                                :op2 (s3h4 / has_state
                                                           :SOURCE s3v
                                                           :V_FINAL_STATE s3d1))
                                      :E0 (s3d2 / do
                                                :ACTION s3d))
               :imp_output (s3d3 / drain.RES))
     :op2 (s3p / plunge-02~3
               :ARG2 (s3w / water
                          :mod (s3c / cold~5,6))
               :ARG0 s3y
               :event-structure (s3se1 / subevents
                                       :E1 (s3h5 / has_location
                                                 :THEME s3v)
                                       :E2 (s3m1 / motion
                                                 :THEME s3v)
                                       :E2 (s3h6 / has_location
                                                 :polarity -
                                                 :THEME s3v)
                                       :E3 (s3h7 / has_location
                                                 :THEME s3v
                                                 :?DESTINATION s3c)
                                       :E0 (s3d4 / do
                                                 :ACTION s3p))
               :imp_output (s3p1 / plunge.RES))
     :mode imperative)


# :: r-1172::step04::sent01
# :: snt4	Drain again and place in a large bowl .
(s4a2 / and~2
      :op1 (s4d / drain-01~0
                :mod (s4a / again~1)
                :ARG0 (s4y / you)
                :event-structure (s4se / subevents
                                       :E1 (s4a1 / and
                                                 :op1 (s4h / has_location
                                                           :IMP_THEME (s4p1 / plunge.RES))
                                                 :op2 (s4h1 / has_state
                                                            :polarity -
                                                            :V_FINAL_STATE (s4d1 / drained)))
                                       :E3 (s4a3 / and
                                                 :op1 (s4m / motion
                                                           :IMP_THEME s4p1)
                                                 :op2 (s4h2 / has_location
                                                            :polarity -
                                                            :IMP_THEME s4p1))
                                       :E4 (s4a4 / and
                                                 :op1 (s4h3 / has_location
                                                            :IMP_THEME s4p1)
                                                 :op2 (s4h4 / has_state
                                                            :V_FINAL_STATE s4d1))
                                       :E0 (s4d2 / do
                                                 :ACTION s4d))
                :imp_output (s4d3 / drain.RES))
      :op2 (s4p / place-01~3
                :ARG2 (s4b / bowl~7
                           :mod (s4l / large~6))
                :ARG0 s4y
                :event-structure (s4se1 / subevents
                                        :E1 (s4h5 / has_location)
                                        :E3 (s4a5 / and
                                                  :op1 (s4m1 / motion
                                                             :IMP_THEME s4d3)
                                                  :op2 (s4h6 / has_location
                                                             :polarity -
                                                             :IMP_THEME s4d3))
                                        :E4 (s4h7 / has_location
                                                  :IMP_THEME s4d3
                                                  :DESTINATION s4b)
                                        :E0 (s4d4 / do
                                                  :ACTION s4p))
                :imp_output (s4p2 / place.RES))
      :mode imperative)


# :: r-1172::step05::sent01
# :: snt5	Add remaining ingredients and toss to mix well .
(s5a2 / and~3
      :op1 (s5a / add-02~0
                :ARG1 (s5i / ingredient~2
                           :ARG1-of (s5r / remain-01~1))
                :ARG0 (s5y / you)
                :event-structure (s5se / subevents
                                       :E1 (s5t1 / together
                                                 :polarity -
                                                 :PATIENT_I s5i)
                                       :E3 (s5t2 / together
                                                 :PATIENT_I s5i)
                                       :E0 (s5d / do
                                                :ACTION s5a))
                :imp_output (s5a1 / add.RES))
      :op2 (s5t / toss-01~4
                :purpose (s5m / mix-01~6
                              :manner (s5w / well~7))
                :ARG0 s5y
                :event-structure (s5se1 / subevents
                                        :E1 (s5b / be
                                                 :polarity -)
                                        :E3 (s5b1 / be)
                                        :E0 (s5d1 / do
                                                  :ACTION s5t))
                :imp_output (s5t3 / toss.RES))
      :mode imperative)


# :: r-1172::step06::sent01
# :: snt6	Refrigerate for 1 hour to blend flavors .
(s6r / refrigerate-01~0
     :purpose (s6b / blend-01~5
                   :ARG1 (s6f / flavor~6))
     :duration (s6t / temporal-quantity
                    :quant 1
                    :unit (s6h / hour~3))
     :mode imperative
     :ARG0 (s6y / you)
     :event-structure (s6se / subevents
                            :E1 (s6h1 / has_state
                                      :polarity -
                                      :IMP_PATIENT (s6t1 / toss.RES)
                                      :V_FINAL_STATE (s6r1 / refrigerated))
                            :E3 (s6h2 / has_state
                                      :IMP_PATIENT s6t1
                                      :V_FINAL_STATE s6r1)
                            :E0 (s6d / do
                                     :ACTION s6r))
     :imp_output (s6r2 / refrigerate.RES))


