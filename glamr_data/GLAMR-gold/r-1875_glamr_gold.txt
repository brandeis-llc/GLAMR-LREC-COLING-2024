# :: r-1875::step01::sent01
# :: snt1	Chop the onion and brown in a pot with the oil .
(s1a / and~3
     :op1 (s1c / chop-01~0
               :ARG1 (s1o2 / onion~2)
               :ARG0 (s1y / you)
               :event-structure (s1se / subevents
                                      :E1 (s1d / degradation_material_integrity
                                               :polarity -
                                               :PATIENT s1o2)
                                      :E2 (s1c1 / contact
                                                :PATIENT s1o2)
                                      :E3 (s1d1 / degradation_material_integrity
                                                :PATIENT s1o2)
                                      :E0 (s1d2 / do
                                                :ACTION s1c))
               :imp_output (s1c2 / chop.RES))
     :op2 (s1b / brown-01~4
               :medium (s1o / oil~10)
               :location (s1p / pot~7)
               :ARG0 s1y
               :event-structure (s1se1 / subevents
                                       :E1 (s1c3 / cooked
                                                 :polarity -
                                                 :PATIENT s1o2
                                                 :V_FINAL_STATE (s1b1 / browned))
                                       :E3 (s1a1 / apply_heat
                                                 :PATIENT s1o2)
                                       :E4 (s1c4 / cooked
                                                 :PATIENT s1o2
                                                 :V_FINAL_STATE s1b1)
                                       :E0 (s1d3 / do
                                                 :ACTION s1b))
               :imp_output (s1b2 / brown.RES))
     :mode imperative)


# :: r-1875::step02::sent01
# :: snt2	Add the meat and brown the sides .
(s2a2 / and~3
      :op1 (s2a / add-02~0
                :ARG1 (s2m / meat~2)
                :ARG0 (s2y / you)
                :event-structure (s2se / subevents
                                       :E1 (s2t / together
                                                :polarity -
                                                :PATIENT_I s2m)
                                       :E3 (s2t1 / together
                                                 :PATIENT_I s2m)
                                       :E0 (s2d / do
                                                :ACTION s2a))
                :imp_output (s2a1 / add.RES))
      :op2 (s2b / brown-01~4
                :ARG1 (s2s / side~6)
                :ARG0 s2y
                :event-structure (s2se1 / subevents
                                        :E1 (s2c / cooked
                                                 :polarity -
                                                 :PATIENT s2s
                                                 :V_FINAL_STATE (s2b1 / browned))
                                        :E3 (s2a3 / apply_heat
                                                  :PATIENT s2s)
                                        :E4 (s2c1 / cooked
                                                  :PATIENT s2s
                                                  :V_FINAL_STATE s2b1)
                                        :E0 (s2d1 / do
                                                  :ACTION s2b))
                :imp_output (s2b2 / brown.RES))
      :mode imperative)


# :: r-1875::step03::sent01
# :: snt3	Sprinkle salt and pepper .
(s3s2 / sprinkle-01~0
      :ARG1 (s3a / and~2
                 :op1 (s3s / salt~1)
                 :op2 (s3p / pepper~3))
      :mode imperative
      :ARG0 (s3y / you)
      :event-structure (s3se / subevents
                             :E1 (s3h / has_location
                                      :THEME s3p)
                             :E3 (s3a1 / and
                                       :op1 (s3m / motion
                                                 :THEME s3p)
                                       :op2 (s3h1 / has_location
                                                  :polarity -
                                                  :THEME s3p))
                             :E4 (s3h2 / has_location
                                       :THEME s3p)
                             :E0 (s3d / do
                                      :ACTION s3s2))
      :imp_output (s3s1 / sprinkle.RES))


# :: r-1875::step04::sent01
# :: snt4	Add the sugar , cover with the tomato juice and add the same amount of water .
(s4a4 / and~9
      :op1 (s4a / add-02~0
                :ARG1 (s4s2 / sugar~2)
                :ARG0 (s4y / you)
                :event-structure (s4se / subevents
                                       :E1 (s4t1 / together
                                                 :polarity -
                                                 :PATIENT_I s4s2)
                                       :E3 (s4t2 / together
                                                 :PATIENT_I s4s2)
                                       :E0 (s4d / do
                                                :ACTION s4a))
                :imp_output (s4a1 / add.RES))
      :op2 (s4c / cover-02~4
                :ARG2 (s4j / juice~8
                           :source (s4t / tomato~7))
                :ARG0 s4y
                :event-structure (s4se1 / subevents
                                        :E1 (s4h / has_location
                                                 :THEME s4j)
                                        :E3 (s4a5 / and
                                                  :op1 (s4m / motion
                                                            :THEME s4j)
                                                  :op2 (s4h1 / has_location
                                                             :polarity -
                                                             :THEME s4j))
                                        :E4 (s4h2 / has_location
                                                  :THEME s4j)
                                        :E0 (s4d1 / do
                                                  :ACTION s4c))
                :imp_output (s4c1 / cover.RES))
      :op3 (s4a2 / add-02~10
                 :ARG1 (s4w / water~15
                            :quant (s4a3 / amount~13
                                         :mod (s4s / same~12)))
                 :ARG0 s4y
                 :event-structure (s4se2 / subevents
                                         :E1 (s4t3 / together
                                                   :polarity -
                                                   :PATIENT_I s4w)
                                         :E3 (s4t4 / together
                                                   :PATIENT_I s4w)
                                         :E0 (s4d2 / do
                                                   :ACTION s4a2))
                 :imp_output (s4a6 / add.RES))
      :mode imperative)


# :: r-1875::step05::sent01
# :: snt5	Let cook for an hour or more until the meat is soft ( in a pressure cooker it takes 20 minutes ) .
(s5l / let-01~0
     :ARG1 (s5c / cook-01~1
                :duration (s5a2 / at-least
                                :op1 (s5t2 / temporal-quantity
                                           :quant 1
                                           :unit (s5h2 / hour~4)))
                :duration (s5u / until~7
                               :op1 (s5s / soft-02~11
                                         :ARG1 (s5m / meat~9)))
                :example (s5t / take-10~18
                              :ARG1 (s5t3 / temporal-quantity
                                          :unit (s5m2 / minute~20)
                                          :quant 20)
                              :location (s5c2 / cooker~16
                                              :mod (s5p / pressure~15)))
                :ARG0 (s5y / you)
                :event-structure (s5se / subevents
                                       :E1 (s5c1 / cooked
                                                 :polarity -
                                                 :IMP_PATIENT (s5a / add.RES)
                                                 :V_FINAL_STATE (s5c3 / cooked))
                                       :E3 (s5a1 / apply_heat
                                                 :IMP_PATIENT s5a)
                                       :E4 (s5a3 / and
                                                 :op1 (s5c4 / cooked
                                                            :IMP_PATIENT s5a
                                                            :V_FINAL_STATE s5c3)
                                                 :op2 (s5h / has_state
                                                           :IMP_PATIENT s5a
                                                           :RESULT s5s))
                                       :E0 (s5d / do
                                                :ACTION s5c))
                :imp_output (s5c5 / cook.RES))
     :mode imperative)


# :: r-1875::step06::sent01
# :: snt6	Serve with rice or fries / chips .
(s6s / serve-02~0
     :accompanier (s6o / or
                       :op1 (s6r / rice~2)
                       :op2 (s6f / fries~4)
                       :op3 (s6c2 / chip~6))
     :mode imperative
     :ARG0 (s6y / you)
     :event-structure (s6se / subevents
                            :E1 (s6a / and
                                     :op1 (s6h / has_possession
                                               :IMP_THEME (s6c / cook.RES))
                                     :op2 (s6h1 / has_possession
                                                :polarity -
                                                :IMP_THEME s6c))
                            :E2 (s6t / transfer
                                     :IMP_THEME s6c)
                            :E3 (s6a1 / and
                                      :op1 (s6h2 / has_possession
                                                 :IMP_THEME s6c)
                                      :op2 (s6h3 / has_possession
                                                 :polarity -
                                                 :IMP_THEME s6c))
                            :E0 (s6d / do
                                     :ACTION s6s))
     :imp_output (s6s1 / serve.RES))


